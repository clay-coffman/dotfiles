# Zsh/Zim Configuration

# Add custom completions to FPATH (must be before compinit)
if [[ ":$FPATH:" != *":{{ .chezmoi.homeDir }}/.zsh/completions:"* ]]; then 
  export FPATH="{{ .chezmoi.homeDir }}/.zsh/completions:$FPATH"
fi

# ENV VARIABLES
export LANG=en_US.UTF-8
export EDITOR=nvim
export XDG_CONFIG_HOME="$HOME/.config"
export GEMINI_API_KEY="{{ onepasswordRead "op://Private/Gemini API Key 1/credential" }}"
export GITHUB_TOKEN="{{ onepasswordRead "op://Private/Github Personal Access Token/credential" }}"
export REF_API_KEY="{{ onepasswordRead "op://Private/Ref API Key/credential" }}"
export CONTEXT7_API_KEY="{{ onepasswordRead "op://Private/Context7 API Key/credential" }}"

# GLOBAL CONFIG FILES
export PRETTIERD_DEFAULT_CONFIG="$HOME/.prettierrc.yaml"
export TAPLO_CONFIG="$XDG_CONFIG_HOME/taplo.toml"
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME/ripgrep/config"

# path to rgignore
export RIPGREP_CONFIG_PATH="{{ .chezmoi.homeDir }}/.config/ripgrep/config"

# PATH
# Base PATH
export PATH="$HOME/bin:$HOME/.local/bin:/opt/homebrew/bin:/usr/local/bin:$PATH"

# LLVM (for compilation tools)
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

# PostgreSQL 16
export PATH="/opt/homebrew/opt/postgresql@16/bin:$PATH"

# pnpm
export PNPM_HOME="{{ .chezmoi.homeDir }}/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

# ZIM
# Zim configuration variables (must be set before initialization)
ZSH_AUTOSUGGEST_MANUAL_REBIND=1
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#dc8a78,bold,underline"
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Zim home directory
ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim

# Download zimfw plugin manager if missing
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  if (( ${+commands[curl]} )); then
    curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  else
    mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  fi
fi

# Install missing modules and update init.zsh if needed
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZIM_CONFIG_FILE:-${ZDOTDIR:-${HOME}}/.zimrc} ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi

# Initialize Zim modules
source ${ZIM_HOME}/init.zsh

# cache completions
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/zcompcache"

# Starship prompt
eval "$(starship init zsh)"

# UV (Python package manager) completions
eval "$(uv generate-shell-completion zsh)"

# zoxide
eval "$(zoxide init zsh)"

# SHELL OPTIONS
# History configuration
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt HIST_IGNORE_ALL_DUPS  # Remove older duplicates
setopt APPEND_HISTORY         
setopt SHARE_HISTORY         
setopt HIST_EXPIRE_DUPS_FIRST  # Expire duplicates first when trimming
setopt HIST_FIND_NO_DUPS       # Don't show duplicates in search
setopt HIST_REDUCE_BLANKS      # Remove superfluous blanks
setopt HIST_VERIFY             # Show command before executing from history
setopt INC_APPEND_HISTORY      # Add to history immediately, not on exit

# Directory navigation
setopt AUTO_CD                # Change directory by typing directory name
setopt EXTENDED_GLOB          # Enable extended globbing patterns

# Command correction
setopt CORRECT                
SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

# Input/output
bindkey -v                    
WORDCHARS=${WORDCHARS//[\/]}  

# FZF configuration
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
export FZF_DEFAULT_OPTS="--height 40% --reverse --border --preview 'bat --color=always {}' --preview-window=right:60%:wrap"
export FZF_CTRL_T_OPTS="--preview '(bat --color=always {} 2> /dev/null || tree -C {}) 2> /dev/null | head -200'"
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"


# CUSTOM FUNCTIONS AND ALIASES
alias v="nvim"
alias c="clear"
alias l="ls -la"

# use bat instead of cat
alias cat="bat --theme auto:system"

alias bake="mbake"

# Git aliases
alias gs='git status'
alias gcm='git commit -m'
alias gp='git push'

# Python/UV aliases
alias uva='uv venv --activate'
alias uvs='uv sync'
alias uvr='uv run'

# Node/pnpm aliases  
alias pn='pnpm'
alias pni='pnpm install'
alias pnx='pnpm exec'

# initializes project mcp file with base mcp servers
mcp-init() {
    local project_dir="${1:-.}"
    cd "$project_dir"
    
    # Copy or merge base config
    ~/.config/scripts/merge-claude-config.sh
    
    # Optional: add project-specific servers
    if [ -n "$2" ]; then
        echo "Add project-specific servers to .mcp.json"
    fi
}

# Yazi with directory change on exit
function y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
    yazi "$@" --cwd-file="$tmp"
    if IFS= read -r -d '' cwd < "$tmp" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}


