
## Zsh/Zim Configuration

# Add custom completions to FPATH (must be before compinit)
if [[ ":$FPATH:" != *":/Users/claycoffman/.zsh/completions:"* ]]; then 
  export FPATH="/Users/claycoffman/.zsh/completions:$FPATH"
fi

## Environment Variables

export LANG=en_US.UTF-8
export EDITOR=nvim
export PRETTIERD_DEFAULT_CONFIG="$HOME/.prettierrc.yaml"

## PATH Configuration

# Base PATH
export PATH="$HOME/bin:$HOME/.local/bin:/opt/homebrew/bin:/usr/local/bin:$PATH"

# LLVM (for compilation tools)
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

# PostgreSQL 16
export PATH="/opt/homebrew/opt/postgresql@16/bin:$PATH"

# pnpm
export PNPM_HOME="/Users/claycoffman/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

## Zim Framework Setup

# Zim configuration variables (must be set before initialization)
ZSH_AUTOSUGGEST_MANUAL_REBIND=1
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#dc8a78,bold,underline"
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Zim home directory
ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim

# Download zimfw plugin manager if missing
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  if (( ${+commands[curl]} )); then
    curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  else
    mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  fi
fi

# Install missing modules and update init.zsh if needed
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZIM_CONFIG_FILE:-${ZDOTDIR:-${HOME}}/.zimrc} ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi

# Initialize Zim modules
source ${ZIM_HOME}/init.zsh

## Shell Options

# History configuration
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt HIST_IGNORE_ALL_DUPS  # Remove older duplicates
setopt APPEND_HISTORY         
setopt SHARE_HISTORY         

# Directory navigation
setopt AUTO_CD                # Change directory by typing directory name
setopt EXTENDED_GLOB          # Enable extended globbing patterns

# Command correction
setopt CORRECT                
SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

# Input/output
bindkey -v                    
WORDCHARS=${WORDCHARS//[\/]}  

## External Tool Initialization

# Starship prompt
eval "$(starship init zsh)"

# UV (Python package manager) completions
eval "$(uv generate-shell-completion zsh)"

# Autojump
[ -f /opt/homebrew/etc/profile.d/autojump.sh ] && . /opt/homebrew/etc/profile.d/autojump.sh

# Deno
. "/Users/claycoffman/.deno/env"

## Custom Functions

# Yazi with directory change on exit
function y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
    yazi "$@" --cwd-file="$tmp"
    if IFS= read -r -d '' cwd < "$tmp" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

# Aliases
alias v="nvim"
alias c="clear"
alias mux="tmuxinator"
